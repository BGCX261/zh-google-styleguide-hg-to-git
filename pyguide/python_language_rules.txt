Python语言规范
------------------

pychecker
~~~~~~~~~~~~~~~~~~~~

.. tip::
    对你的代码运行pychecker
   
导入
~~~~~~~~~~~~~~~~~~~~

.. tip::
    仅对包和模块使用导入    

包
~~~~~~~~~~~~~~~~~~~~

.. tip::
    使用模块的全路径名来导入每个模块    
   
异常
~~~~~~~~~~~~~~~~~~~~

.. tip::
    允许使用异常, 但必须小心
  
全局变量
~~~~~~~~~~~~~~~~~~~~

.. tip::
    避免全局变量

嵌套/本地/内部类或函数
~~~~~~~~~~~~~~~~~~~~

.. tip::
    鼓励使用嵌套/本地/内部类或函数

列表推导
~~~~~~~~~~~~~~~~~~~~

.. tip::
    可以在简单情况下使用    
    
默认迭代器和操作符
~~~~~~~~~~~~~~~~~~~~

.. tip::
    如果类型支持, 使用默认迭代器和操作符, 比如列表, 字典及文件等.
  
生成器
~~~~~~~~~~~~~~~~~~~~

.. tip::
    在需要时, 使用生成器.

Lambda函数
~~~~~~~~~~~~~~~~~~~~

.. tip::
    适用于单行函数

默认参数值
~~~~~~~~~~~~~~~~~~~~

.. tip::
    适用于大部分情况.
    
    
属性
~~~~~~~~~~~~~~~~~~~~

.. tip::
    访问和设置数据成员时, 你通常会使用简单, 轻量级的访问和设置函数. 建议用属性来代替它们.    
    
True/False的求值
~~~~~~~~~~~~~~~~~~~~

.. tip::
    尽可能使用隐式false
    
    
过时的语言特性
~~~~~~~~~~~~~~~~~~~~

.. tip::
    尽可能使用字符串方法取代字符串模块. 使用函数调用语法取代apply(). 使用列表推导, for循环取代filter(), map()以及reduce().    

静态Scoping(Lexical Scoping)
~~~~~~~~~~~~~~~~~~~~

.. tip::
    推荐使用
    
    
函数与方法装饰器
~~~~~~~~~~~~~~~~~~~~

.. tip::
    如果好处很显然, 就明智而谨慎的使用装饰器   
    
线程
~~~~~~~~~~~~~~~~~~~~

.. tip::
    不要依赖内建类型的原子性.
    
    
威力过大的特性
~~~~~~~~~~~~~~~~~~~~

.. tip::
    避免使用这些特性    